{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Nav/index.js","components/Header/index.js","components/Footer/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","onClick","clickedFriend","id","role","aria-label","className","concat","classShake","style","backgroundImage","image","Wrapper","children","Nav","href","brand","classMiddle","middle","scores","Header","h1","h2","Footer","title","alt","src","url","App","state","friends","score","topScore","middleNav","shuffle","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","incorrect","friends1","_this","map","friend","clicked","setState","friends2","frnd","setTimeout","newFriends","this","_this2","components_Wrapper","components_Nav","components_Header","components_FriendCard","key","name","components_Footer","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.edaa2df4.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction FriendCard(props) {\n  return (\n    <div onClick={() => props.clickedFriend(props.id)} role=\"img\" aria-label=\"click item\" className={`click-item${props.classShake}`}\n          style={{backgroundImage: `url(${props.image})`}}>\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\n\nfunction Wrapper(props) {\n  return <div>{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\n\nfunction Nav(props) {\n  return <nav className=\"navbar\">\n  <ul>\n    <li className=\"brand\"><a href=\"/\">{props.brand}</a></li>\n    <li className={props.classMiddle}>{props.middle}</li>\n    <li>{props.scores}</li>\n  </ul>\n</nav>;\n}\n\nexport default Nav;\n","import React from \"react\";\n\nfunction Header(props) {\n  return <header className=\"header\">\n  <h1>{props.h1}</h1>\n  <h2>{props.h2}</h2>\n</header>;\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Footer(props) {\n  return <footer className=\"footer\">\n    <div className=\"bottom\">{props.title} <img alt=\"react\" src={props.url} /></div>\n  </footer>;\n}\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Nav from \"./components/Nav\";\nimport Header from \"./components/Header\";\nimport Footer from \"./components/Footer\";\nimport friends from \"./friends.json\";\n\nclass App extends Component {\n  state = {\n    friends,\n    score: 0,\n    topScore: 0,\n    middleNav: \"Click an image to begin!\",\n    classShake: \"\",\n    classMiddle: \"\"\n  };\n\n  componentDidMount() {\n    let newFriends = this.shuffle(friends);\n    this.setState({ friends: newFriends });\n  }\n\n  shuffle = array => {\n    var currentIndex = array.length, temporaryValue, randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    return array;\n  }\n\n  clickedFriend = id => {\n    var incorrect = false;\n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    const friends1 = this.state.friends.map(friend => {\n      if (friend.id === id) {\n        if (friend.clicked) {\n          incorrect = true;\n          if (this.state.score>this.state.topScore) {\n            this.setState({ topScore: this.state.score });\n          }\n          const friends2 = this.state.friends.map(frnd => {\n            frnd.clicked = false;\n          });\n          this.setState({ friends: friends2, score: 0, middleNav: \"You guessed incorrectly!\", classMiddle: \"incorrect\" });\n        } else {\n          incorrect = false;\n          friend.clicked = true;\n          this.setState({ score: this.state.score+1, middleNav: \"You guessed correctly!\", classMiddle: \"correct\" });\n        }\n      }\n      return friend;\n    });\n    if (incorrect) this.setState({ classShake: \" shake\", classMiddle: \"incorrect\" });\n    else this.setState({ classShake: \"\", classMiddle: \"correct\" });\n    setTimeout(()=>{\n      this.setState({classMiddle: \"\" });\n    },400)\n    let newFriends=this.shuffle(friends1);\n    this.setState({ friends: newFriends });\n  };\n  \n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n    return (\n      <Wrapper>\n        <Nav scores={`Score: ${this.state.score} | Top Score: ${this.state.topScore}`} brand=\"Clicky Game\" middle={this.state.middleNav} classMiddle={this.state.classMiddle}></Nav>\n        <Header h1=\"Clicky Game!\" h2=\"Click on an image to earn points, but don't click on any more than once!\"></Header>\n        <main className=\"container\">\n          {\n            this.state.friends.map(friend => (\n            <FriendCard\n              clickedFriend={this.clickedFriend}\n              id={friend.id}\n              key={friend.id}\n              name={friend.name}\n              image={friend.image}\n              classShake={this.state.classShake}\n            />\n          ))}\n        </main>\n        <Footer title=\"Clicky Game!\" url=\"assets/images/react.svg\"></Footer>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}